// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// max_subarray_sum_naive_Rcpp
int max_subarray_sum_naive_Rcpp(std::vector<int>& arr);
RcppExport SEXP _MaximumSubarray_max_subarray_sum_naive_Rcpp(SEXP arrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int>& >::type arr(arrSEXP);
    rcpp_result_gen = Rcpp::wrap(max_subarray_sum_naive_Rcpp(arr));
    return rcpp_result_gen;
END_RCPP
}
// max_subarray_sum_opt_Rcpp
int max_subarray_sum_opt_Rcpp(std::vector<int>& arr);
RcppExport SEXP _MaximumSubarray_max_subarray_sum_opt_Rcpp(SEXP arrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int>& >::type arr(arrSEXP);
    rcpp_result_gen = Rcpp::wrap(max_subarray_sum_opt_Rcpp(arr));
    return rcpp_result_gen;
END_RCPP
}
// max_subarray_rectangle_naive_Rcpp
int max_subarray_rectangle_naive_Rcpp(std::vector<std::vector<int>>& mat);
RcppExport SEXP _MaximumSubarray_max_subarray_rectangle_naive_Rcpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::vector<int>>& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(max_subarray_rectangle_naive_Rcpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// max_subarray_rectangle_opt_Rcpp
int max_subarray_rectangle_opt_Rcpp(std::vector<std::vector<int>>& mat);
RcppExport SEXP _MaximumSubarray_max_subarray_rectangle_opt_Rcpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::vector<int>>& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(max_subarray_rectangle_opt_Rcpp(mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MaximumSubarray_max_subarray_sum_naive_Rcpp", (DL_FUNC) &_MaximumSubarray_max_subarray_sum_naive_Rcpp, 1},
    {"_MaximumSubarray_max_subarray_sum_opt_Rcpp", (DL_FUNC) &_MaximumSubarray_max_subarray_sum_opt_Rcpp, 1},
    {"_MaximumSubarray_max_subarray_rectangle_naive_Rcpp", (DL_FUNC) &_MaximumSubarray_max_subarray_rectangle_naive_Rcpp, 1},
    {"_MaximumSubarray_max_subarray_rectangle_opt_Rcpp", (DL_FUNC) &_MaximumSubarray_max_subarray_rectangle_opt_Rcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_MaximumSubarray(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
